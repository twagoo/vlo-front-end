
import getConfig from 'next/config'
const { publicRuntimeConfig } = getConfig()
const SERVICE_BASE_URL = publicRuntimeConfig.vloServiceBaseUrl;

function requestUrlWithParams(reqParams) {
    return SERVICE_BASE_URL + '/records?' + new URLSearchParams(reqParams);
}

function urlParamsFor(query, pagination) {
    const params = {};
    if (query != null) {
        Object.assign(params, { q: query });
    }
    if (pagination != null) {
        Object.assign(params, {
            from: pagination.from,
            size: pagination.pageSize
        });
    }

    return params;
}



export async function getSearchResult(q, pagination) {
    const reqUrl = requestUrlWithParams(urlParamsFor(q, pagination));

    console.log('Requesting search results from', reqUrl);

    const res = await fetch(reqUrl);
    const resultsJson = await res.json();
    return resultsJson;
}

export function getRecord(id, { success, notFound, error }) {

    const reqUrl = SERVICE_BASE_URL + `/records/${id}`;

    return fetch(reqUrl)
        .then(response => {
            if (response.ok) {
                return response.json().then(success);
            } else if (response.status == 404) {
                return notFound();
            } else {
                return error(response.statusText);
            }
        })
        .catch(error);
}
